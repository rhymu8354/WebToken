/**
 * @file WebTokenTests.cpp
 *
 * This module contains the unit tests of the
 * WebToken::WebToken class.
 *
 * Â© 2019 by Richard Walters
 */

#include <gtest/gtest.h>
#include <Json/Value.hpp>
#include <WebToken/WebToken.hpp>
#include <stdint.h>
#include <vector>

TEST(WebTokenTests, Decode) {
    const std::string header = "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjEifQ";
    const std::string payload = "eyJhdWQiOiI0YnRuYWVhaXN0NnVqNHpxaGl0b29rZml5YjE1Nm8iLCJleHAiOjE1NjY3NTYxMjcsImlhdCI6MTU2Njc1NTIyNywiaXNzIjoiaHR0cHM6Ly9pZC50d2l0Y2gudHYvb2F1dGgyIiwic3ViIjoiNjI5NjY0NzciLCJhenAiOiI0YnRuYWVhaXN0NnVqNHpxaGl0b29rZml5YjE1Nm8iLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJyaHltdTgzNTQifQ";
    const std::string signature = "vsBFHzgnkc3aT1U7MQYGOvtGS4odVX3IBXHFzc8QqKGYbCWq38dWc8V6DKBBm_Uzfx-8ulxEAWye_D9VNDDoBFhLziz0TSyuKFID61TPG3Zfig2ApeIiZgREsoVKKHdwukmLkFhye4ZQOQkQuN8CBxklFoEKRzn-y5xY1HFfB0rgp5ms8rYzrxEdgR9MorRh8fMaal2bXsEozatHl4WoPoqEsls09Jfhpe1mmsR9yontTFazVx24h8I2BT3Yq_Q6YluXFGiNwUK1TYV7q0Xw59EXyKIovUSatD5tMz4irIdvhpyC5P7ce5k7a0luUqRdyWAOhwEsUc5T38XtAZijuBHv0wD7Hsc-gDsPfFG1z7FgfepfloAAhPkr708T1TOMNgtelJVAXkVJES4gH2eAeYX2mYi1l9mKCBANnt0yq3o9aE4KqXiDlEJhkuGpHIvw4bFq8Qu8jCJsyp1pCTMSrLu37-Ahi5ZeYbSxT-I7Zu5atKZf5MhbNOVK5u9z_O1yz3fsuDkwRJRQM2xyWHxDiHHkot0g-dsNZl41PvDTpKF83ZMjH_EiQ8Q-3DJRdZZ7-TM5Y07-JfQSpTwMlcdXAXiXrzjVGSN3pZCGCY-9OWFUP72320ebBRi2sJJkAmRxQLojJnugCUEWZS4yB78Ck6Kl8234FzRx1x4CsPFYxow";
    WebToken::WebToken jwt(header + "." + payload + "." + signature);
    const std::string dataAsString = header + "." + payload;
    const std::vector< uint8_t > data(
        dataAsString.begin(),
        dataAsString.end()
    );
    EXPECT_EQ(data, jwt.GetData());
    EXPECT_EQ(
        Json::Object({
            {"alg", "RS256"},
            {"typ", "JWT"},
            {"kid", "1"},
        }),
        jwt.GetHeader()
    );
    EXPECT_EQ(
        Json::Object({
            {"aud", "4btnaeaist6uj4zqhitookfiyb156o"},
            {"exp", 1566756127},
            {"iat", 1566755227},
            {"iss", "https://id.twitch.tv/oauth2"},
            {"sub", "62966477"},
            {"azp", "4btnaeaist6uj4zqhitookfiyb156o"},
            {"preferred_username", "rhymu8354"},
        }),
        jwt.GetPayload()
    );
    EXPECT_EQ(
        std::vector< uint8_t >({
            0xbe, 0xc0, 0x45, 0x1f, 0x38, 0x27, 0x91, 0xcd, 0xda, 0x4f,
            0x55, 0x3b, 0x31, 0x06, 0x06, 0x3a, 0xfb, 0x46, 0x4b, 0x8a,
            0x1d, 0x55, 0x7d, 0xc8, 0x05, 0x71, 0xc5, 0xcd, 0xcf, 0x10,
            0xa8, 0xa1, 0x98, 0x6c, 0x25, 0xaa, 0xdf, 0xc7, 0x56, 0x73,
            0xc5, 0x7a, 0x0c, 0xa0, 0x41, 0x9b, 0xf5, 0x33, 0x7f, 0x1f,
            0xbc, 0xba, 0x5c, 0x44, 0x01, 0x6c, 0x9e, 0xfc, 0x3f, 0x55,
            0x34, 0x30, 0xe8, 0x04, 0x58, 0x4b, 0xce, 0x2c, 0xf4, 0x4d,
            0x2c, 0xae, 0x28, 0x52, 0x03, 0xeb, 0x54, 0xcf, 0x1b, 0x76,
            0x5f, 0x8a, 0x0d, 0x80, 0xa5, 0xe2, 0x22, 0x66, 0x04, 0x44,
            0xb2, 0x85, 0x4a, 0x28, 0x77, 0x70, 0xba, 0x49, 0x8b, 0x90,
            0x58, 0x72, 0x7b, 0x86, 0x50, 0x39, 0x09, 0x10, 0xb8, 0xdf,
            0x02, 0x07, 0x19, 0x25, 0x16, 0x81, 0x0a, 0x47, 0x39, 0xfe,
            0xcb, 0x9c, 0x58, 0xd4, 0x71, 0x5f, 0x07, 0x4a, 0xe0, 0xa7,
            0x99, 0xac, 0xf2, 0xb6, 0x33, 0xaf, 0x11, 0x1d, 0x81, 0x1f,
            0x4c, 0xa2, 0xb4, 0x61, 0xf1, 0xf3, 0x1a, 0x6a, 0x5d, 0x9b,
            0x5e, 0xc1, 0x28, 0xcd, 0xab, 0x47, 0x97, 0x85, 0xa8, 0x3e,
            0x8a, 0x84, 0xb2, 0x5b, 0x34, 0xf4, 0x97, 0xe1, 0xa5, 0xed,
            0x66, 0x9a, 0xc4, 0x7d, 0xca, 0x89, 0xed, 0x4c, 0x56, 0xb3,
            0x57, 0x1d, 0xb8, 0x87, 0xc2, 0x36, 0x05, 0x3d, 0xd8, 0xab,
            0xf4, 0x3a, 0x62, 0x5b, 0x97, 0x14, 0x68, 0x8d, 0xc1, 0x42,
            0xb5, 0x4d, 0x85, 0x7b, 0xab, 0x45, 0xf0, 0xe7, 0xd1, 0x17,
            0xc8, 0xa2, 0x28, 0xbd, 0x44, 0x9a, 0xb4, 0x3e, 0x6d, 0x33,
            0x3e, 0x22, 0xac, 0x87, 0x6f, 0x86, 0x9c, 0x82, 0xe4, 0xfe,
            0xdc, 0x7b, 0x99, 0x3b, 0x6b, 0x49, 0x6e, 0x52, 0xa4, 0x5d,
            0xc9, 0x60, 0x0e, 0x87, 0x01, 0x2c, 0x51, 0xce, 0x53, 0xdf,
            0xc5, 0xed, 0x01, 0x98, 0xa3, 0xb8, 0x11, 0xef, 0xd3, 0x00,
            0xfb, 0x1e, 0xc7, 0x3e, 0x80, 0x3b, 0x0f, 0x7c, 0x51, 0xb5,
            0xcf, 0xb1, 0x60, 0x7d, 0xea, 0x5f, 0x96, 0x80, 0x00, 0x84,
            0xf9, 0x2b, 0xef, 0x4f, 0x13, 0xd5, 0x33, 0x8c, 0x36, 0x0b,
            0x5e, 0x94, 0x95, 0x40, 0x5e, 0x45, 0x49, 0x11, 0x2e, 0x20,
            0x1f, 0x67, 0x80, 0x79, 0x85, 0xf6, 0x99, 0x88, 0xb5, 0x97,
            0xd9, 0x8a, 0x08, 0x10, 0x0d, 0x9e, 0xdd, 0x32, 0xab, 0x7a,
            0x3d, 0x68, 0x4e, 0x0a, 0xa9, 0x78, 0x83, 0x94, 0x42, 0x61,
            0x92, 0xe1, 0xa9, 0x1c, 0x8b, 0xf0, 0xe1, 0xb1, 0x6a, 0xf1,
            0x0b, 0xbc, 0x8c, 0x22, 0x6c, 0xca, 0x9d, 0x69, 0x09, 0x33,
            0x12, 0xac, 0xbb, 0xb7, 0xef, 0xe0, 0x21, 0x8b, 0x96, 0x5e,
            0x61, 0xb4, 0xb1, 0x4f, 0xe2, 0x3b, 0x66, 0xee, 0x5a, 0xb4,
            0xa6, 0x5f, 0xe4, 0xc8, 0x5b, 0x34, 0xe5, 0x4a, 0xe6, 0xef,
            0x73, 0xfc, 0xed, 0x72, 0xcf, 0x77, 0xec, 0xb8, 0x39, 0x30,
            0x44, 0x94, 0x50, 0x33, 0x6c, 0x72, 0x58, 0x7c, 0x43, 0x88,
            0x71, 0xe4, 0xa2, 0xdd, 0x20, 0xf9, 0xdb, 0x0d, 0x66, 0x5e,
            0x35, 0x3e, 0xf0, 0xd3, 0xa4, 0xa1, 0x7c, 0xdd, 0x93, 0x23,
            0x1f, 0xf1, 0x22, 0x43, 0xc4, 0x3e, 0xdc, 0x32, 0x51, 0x75,
            0x96, 0x7b, 0xf9, 0x33, 0x39, 0x63, 0x4e, 0xfe, 0x25, 0xf4,
            0x12, 0xa5, 0x3c, 0x0c, 0x95, 0xc7, 0x57, 0x01, 0x78, 0x97,
            0xaf, 0x38, 0xd5, 0x19, 0x23, 0x77, 0xa5, 0x90, 0x86, 0x09,
            0x8f, 0xbd, 0x39, 0x61, 0x54, 0x3f, 0xbd, 0xb7, 0xdb, 0x47,
            0x9b, 0x05, 0x18, 0xb6, 0xb0, 0x92, 0x64, 0x02, 0x64, 0x71,
            0x40, 0xba, 0x23, 0x26, 0x7b, 0xa0, 0x09, 0x41, 0x16, 0x65,
            0x2e, 0x32, 0x07, 0xbf, 0x02, 0x93, 0xa2, 0xa5, 0xf3, 0x6d,
            0xf8, 0x17, 0x34, 0x71, 0xd7, 0x1e, 0x02, 0xb0, 0xf1, 0x58,
            0xc6, 0x8c
        }),
        jwt.GetSignature()
    );
}
